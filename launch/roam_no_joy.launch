<?xml version="1.0"?>
<launch>
  <param name="/use_sim_time" value="false"/>

  <node pkg="image_view" type="image_view" name="image_view_rgb">
    <remap from="image" to="rgb"/>
  </node>

  <node pkg="image_view" type="image_view" name="image_view_depth">
    <remap from="image" to="depth"/>
  </node>

  <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">
    <remap from="image" to="depth"/>
    <!--<remap from="scan"  to="scan_raw"/>-->      <!-- NEW -->
    <param name="output_frame_id" value="laser"/> <!--laser-->
    <remap from="scan"  to="scan"/> <!--scan_raw-->
    <param name="scan_time" value="0.025"/> <!--0.025-->
    <param name="output_unit" value="METERS"/>
    <param name="range_max"   value="3.5"/> <!--5-->
    <param name="range_min" value="0.05" />
    <param name="scan_height" value="40"/>
  </node>

  <node pkg="tf" type="static_transform_publisher"
      name="base_to_laser"
      args="0 0 0 0 0 0 base_frame  laser 100"/>

  <!-- <node pkg="laser_filters" type="scan_to_scan_filter_chain"
        name="scan_filter" output="screen">
    <rosparam command="load"
              file="$(find ros_x_habitat)/config/scan_filters.yaml"/>
    <remap from="scan"          to="scan_raw"/>
    <remap from="scan_filtered" to="scan"/>
  </node> -->
  <!-- ───── filter chain: /scan_raw → /scan (filtered) ─────────────────── -->
  <!-- <node pkg="laser_filters" type="scan_to_scan_filter_chain"
        name="scan_filter" output="screen">
    <rosparam command="load"
              file="$(find ros_x_habitat)/config/scan_filters.yaml"/>
    <remap from="scan"          to="scan_raw"/>
    <remap from="scan_filtered" to="scan"/>
  </node> -->

  <!-- <node pkg="laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher_node" output="screen">
    <param name="max_iterations" value="10"/>
    <remap from="camera_info" to="camera_info"/>
    <param name="fixed_frame" value="odom"/>
    <param name="base_frame" value="base_frame"/>
  </node> -->

  <!-- <node pkg="laser_scan_matcher" type="laser_scan_matcher_node"
      name="laser_scan_matcher_node" output="screen">

    <param name="use_imu"  value="true"/>        
    <param name="use_odom" value="true"/>           
    <param name="use_vel"  value="false"/>          

    <param name="max_angular_correction_deg" value="6.0"/>
    <param name="max_linear_correction"      value="0.05"/>

    <param name="outliers_maxPerc"            value="0.70"/>
    <param name="outliers_adaptive_order"     value="0.60"/>
    <param name="outliers_adaptive_mul"       value="1.5"/>
    <param name="do_alpha_test"               value="1"/>
    <param name="do_alpha_test_thresholdDeg"  value="15.0"/>

    <param name="restart"                     value="1"/>
    <param name="restart_threshold_mean_error" value="0.02"/>
    <param name="restart_dtheta"              value="0.15"/>

    <param name="imu_topic"  value="/imu/data"/>
    <param name="odom_topic" value="/odom"/>

    <param name="max_iterations" value="10"/>
    <remap from="camera_info" to="camera_info"/>
    <param name="fixed_frame"    value="odom"/>
    <param name="base_frame"     value="base_frame"/>

  </node> -->

  <node pkg="ros_x_habitat" type="keep_alive.py" name="keep_alive"/>

  <!-- <node pkg="tf" type="static_transform_publisher" name="base_frame_to_laser"
        args="0 0 0 0 0 0 /base_frame /laser 50"/> -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="base_frame_to_laser" args="0.0 0.0 0.0 -1.5708 0.0 -1.5708 /base_frame /laser 50" /> -->
</launch>
